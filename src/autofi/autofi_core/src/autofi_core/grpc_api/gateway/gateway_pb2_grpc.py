# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import autofi_core.grpc_api.gateway.gateway_pb2 as gateway__pb2

GRPC_GENERATED_VERSION = '1.73.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in gateway_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class VaultServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EthereumSign = channel.unary_unary(
                '/signerGateway.VaultService/EthereumSign',
                request_serializer=gateway__pb2.EthereumSignRequest.SerializeToString,
                response_deserializer=gateway__pb2.EthereumSignReply.FromString,
                _registered_method=True)
        self.SignData = channel.unary_unary(
                '/signerGateway.VaultService/SignData',
                request_serializer=gateway__pb2.SignDataRequest.SerializeToString,
                response_deserializer=gateway__pb2.SignDataReply.FromString,
                _registered_method=True)
        self.Initialize = channel.unary_unary(
                '/signerGateway.VaultService/Initialize',
                request_serializer=gateway__pb2.InitializeRequest.SerializeToString,
                response_deserializer=gateway__pb2.InitializeReply.FromString,
                _registered_method=True)
        self.Health = channel.unary_unary(
                '/signerGateway.VaultService/Health',
                request_serializer=gateway__pb2.Empty.SerializeToString,
                response_deserializer=gateway__pb2.InitializeReply.FromString,
                _registered_method=True)
        self.GetAddress = channel.unary_unary(
                '/signerGateway.VaultService/GetAddress',
                request_serializer=gateway__pb2.GetAddressRequest.SerializeToString,
                response_deserializer=gateway__pb2.GetAddressReply.FromString,
                _registered_method=True)


class VaultServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def EthereumSign(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Initialize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Health(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VaultServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EthereumSign': grpc.unary_unary_rpc_method_handler(
                    servicer.EthereumSign,
                    request_deserializer=gateway__pb2.EthereumSignRequest.FromString,
                    response_serializer=gateway__pb2.EthereumSignReply.SerializeToString,
            ),
            'SignData': grpc.unary_unary_rpc_method_handler(
                    servicer.SignData,
                    request_deserializer=gateway__pb2.SignDataRequest.FromString,
                    response_serializer=gateway__pb2.SignDataReply.SerializeToString,
            ),
            'Initialize': grpc.unary_unary_rpc_method_handler(
                    servicer.Initialize,
                    request_deserializer=gateway__pb2.InitializeRequest.FromString,
                    response_serializer=gateway__pb2.InitializeReply.SerializeToString,
            ),
            'Health': grpc.unary_unary_rpc_method_handler(
                    servicer.Health,
                    request_deserializer=gateway__pb2.Empty.FromString,
                    response_serializer=gateway__pb2.InitializeReply.SerializeToString,
            ),
            'GetAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAddress,
                    request_deserializer=gateway__pb2.GetAddressRequest.FromString,
                    response_serializer=gateway__pb2.GetAddressReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'signerGateway.VaultService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('signerGateway.VaultService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class VaultService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def EthereumSign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/signerGateway.VaultService/EthereumSign',
            gateway__pb2.EthereumSignRequest.SerializeToString,
            gateway__pb2.EthereumSignReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SignData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/signerGateway.VaultService/SignData',
            gateway__pb2.SignDataRequest.SerializeToString,
            gateway__pb2.SignDataReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Initialize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/signerGateway.VaultService/Initialize',
            gateway__pb2.InitializeRequest.SerializeToString,
            gateway__pb2.InitializeReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Health(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/signerGateway.VaultService/Health',
            gateway__pb2.Empty.SerializeToString,
            gateway__pb2.InitializeReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/signerGateway.VaultService/GetAddress',
            gateway__pb2.GetAddressRequest.SerializeToString,
            gateway__pb2.GetAddressReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
